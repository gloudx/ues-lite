package main

import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/urfave/cli/v2"
)

func clearKeys(ctx *cli.Context) error {

	force := ctx.Bool("force")

	if !force {
		fmt.Print("‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –∫–ª—é—á–∏? (y/N): ")
		var response string
		fmt.Scanln(&response)
		if strings.ToLower(response) != "y" && strings.ToLower(response) != "–¥–∞" {
			fmt.Println("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
			return nil
		}
	}

	app, err := initApp(ctx)
	if err != nil {
		return err
	}
	defer app.Close()

	silent := ctx.Bool("silent")
	if silent {
		app.ds.SetSilentMode(true)
		defer app.ds.SetSilentMode(false)
	}

	ctxTimeout, cancel := context.WithTimeout(context.Background(), 120*time.Second)
	defer cancel()

	err = app.ds.Clear(ctxTimeout)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞—Ç–∞—Å—Ç–æ—Ä–∞: %w", err)
	}

	fmt.Println("üßπ –î–∞—Ç–∞—Å—Ç–æ—Ä –æ—á–∏—â–µ–Ω")

	return nil
}

func init() {
	commands = append(commands, &cli.Command{
		Name:  "clear",
		Usage: "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–ª—é—á–∏ –∏–∑ –¥–∞—Ç–∞—Å—Ç–æ—Ä–∞",
		Flags: []cli.Flag{
			&cli.BoolFlag{
				Name:    "force",
				Aliases: []string{"f"},
				Usage:   "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
			},
			&cli.BoolFlag{
				Name:  "silent",
				Usage: "–û—Ç–∫–ª—é—á–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã)",
			},
		},
		Action: clearKeys,
	})
}

package main

import (
	"context"
	"fmt"
	"time"
	"ues-lite/datastore"

	"github.com/urfave/cli/v2"
)

func createView(ctx *cli.Context) error {
	if ctx.NArg() < 2 {
		return fmt.Errorf("—Ç—Ä–µ–±—É–µ—Ç—Å—è ID –∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")
	}

	app, err := initApp(ctx)
	if err != nil {
		return err
	}
	defer app.Close()

	id := ctx.Args().Get(0)
	sourcePrefix := ctx.Args().Get(1)
	name := ctx.String("name")
	if name == "" {
		name = id
	}

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é view
	config := datastore.ViewConfig{
		ID:              id,
		Name:            name,
		Description:     ctx.String("description"),
		SourcePrefix:    sourcePrefix,
		TargetPrefix:    ctx.String("target-prefix"),
		FilterScript:    ctx.String("filter"),
		TransformScript: ctx.String("transform"),
		SortScript:      ctx.String("sort"),
		StartKey:        ctx.String("start-key"),
		EndKey:          ctx.String("end-key"),
		EnableCaching:   ctx.Bool("cache"),
		CacheTTL:        ctx.Duration("cache-ttl"),
		AutoRefresh:     ctx.Bool("auto-refresh"),
		RefreshDebounce: ctx.Duration("debounce"),
		MaxResults:      ctx.Int("max-results"),
	}

	// –ï—Å–ª–∏ target prefix –Ω–µ —É–∫–∞–∑–∞–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
	if config.TargetPrefix == "" {
		config.TargetPrefix = fmt.Sprintf("/views/%s", id)
	}

	ctxTimeout, cancel := context.WithTimeout(context.Background(), 30*time.Second)
	defer cancel()

	view, err := app.ds.CreateView(ctxTimeout, config)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è view: %w", err)
	}

	fmt.Printf("‚úÖ View '%s' —Å–æ–∑–¥–∞–Ω\n", view.ID())
	fmt.Printf("üìÅ –ò—Å—Ç–æ—á–Ω–∏–∫: %s\n", config.SourcePrefix)
	if config.TargetPrefix != "" {
		fmt.Printf("üéØ –¶–µ–ª—å: %s\n", config.TargetPrefix)
	}
	if config.FilterScript != "" {
		fmt.Printf("üîç –§–∏–ª—å—Ç—Ä: %s\n", config.FilterScript)
	}
	if config.TransformScript != "" {
		fmt.Printf("üîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è: %s\n", config.TransformScript)
	}
	if config.SortScript != "" {
		fmt.Printf("üìä –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: %s\n", config.SortScript)
	}
	if config.EnableCaching {
		fmt.Printf("üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: –≤–∫–ª—é—á–µ–Ω–æ (TTL: %v)\n", config.CacheTTL)
	}
	if config.AutoRefresh {
		fmt.Printf("üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –≤–∫–ª—é—á–µ–Ω–æ (debounce: %v)\n", config.RefreshDebounce)
	}

	return nil
}

func init() {
	commands = append(commands, &cli.Command{
		Name:    "create-view",
		Aliases: []string{"cv"},
		Usage:   "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π view",
		Flags: []cli.Flag{
			&cli.StringFlag{
				Name:    "name",
				Aliases: []string{"n"},
				Usage:   "–ò–º—è view (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ID)",
			},
			&cli.StringFlag{
				Name:    "description",
				Aliases: []string{"desc"},
				Usage:   "–û–ø–∏—Å–∞–Ω–∏–µ view",
			},
			&cli.StringFlag{
				Name:  "target-prefix",
				Usage: "–ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ view",
			},
			&cli.StringFlag{
				Name:    "filter",
				Aliases: []string{"f"},
				Usage:   "JavaScript —Å–∫—Ä–∏–ø—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏",
			},
			&cli.StringFlag{
				Name:    "transform",
				Aliases: []string{"t"},
				Usage:   "JavaScript —Å–∫—Ä–∏–ø—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏",
			},
			&cli.StringFlag{
				Name:    "sort",
				Aliases: []string{"s"},
				Usage:   "JavaScript —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
			},
			&cli.StringFlag{
				Name:  "start-key",
				Usage: "–ù–∞—á–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
			},
			&cli.StringFlag{
				Name:  "end-key",
				Usage: "–ö–æ–Ω–µ—á–Ω—ã–π –∫–ª—é—á –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
			},
			&cli.BoolFlag{
				Name:  "cache",
				Value: true,
				Usage: "–í–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
			},
			&cli.DurationFlag{
				Name:  "cache-ttl",
				Value: 10 * time.Minute,
				Usage: "–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞",
			},
			&cli.BoolFlag{
				Name:  "auto-refresh",
				Value: true,
				Usage: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö",
			},
			&cli.DurationFlag{
				Name:  "debounce",
				Value: 2 * time.Second,
				Usage: "–ó–∞–¥–µ—Ä–∂–∫–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π",
			},
			&cli.IntFlag{
				Name:  "max-results",
				Value: 1000,
				Usage: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
			},
		},
		Action:    createView,
		ArgsUsage: "<view-id> <source-prefix>",
		Description: `–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π view –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.

View –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é JavaScript:
- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: –æ—Ç–±–æ—Ä –Ω—É–∂–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
- –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö  
- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏

–ü—Ä–∏–º–µ—Ä—ã:

1. –ü—Ä–æ—Å—Ç–æ–π view –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
   ues-ds create-view active-users /users/ \
     --filter "data.json && data.json.active === true"

2. View —Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö:
   ues-ds create-view user-profiles /users/ \
     --filter "data.json && data.json.active" \
     --transform "return {name: data.json.name, email: data.json.email};"

3. View —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ:
   ues-ds create-view recent-posts /posts/ \
     --sort "return new Date(data.json.created_at).getTime();"

4. View —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω–∞:
   ues-ds create-view orders-2024 /orders/ \
     --start-key "/orders/2024-01-01" \
     --end-key "/orders/2025-01-01"

JavaScript API –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö:
- data.key - –∫–ª—é—á –∑–∞–ø–∏—Å–∏
- data.value - —Å—ã—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (—Å—Ç—Ä–æ–∫–∞)
- data.json - —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–π JSON (–µ—Å–ª–∏ –≤–∞–ª–∏–¥–Ω—ã–π)
- data.size - —Ä–∞–∑–º–µ—Ä –∑–Ω–∞—á–µ–Ω–∏—è –≤ –±–∞–π—Ç–∞—Ö

–§—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å:
- filter: true/false –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
- transform: –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö
- sort: —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏`,
	})
}

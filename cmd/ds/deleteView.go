package main

import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/urfave/cli/v2"
)

func deleteView(ctx *cli.Context) error {
	if ctx.NArg() < 1 {
		return fmt.Errorf("—Ç—Ä–µ–±—É–µ—Ç—Å—è ID view")
	}

	app, err := initApp(ctx)
	if err != nil {
		return err
	}
	defer app.Close()

	viewID := ctx.Args().Get(0)
	force := ctx.Bool("force")

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ view
	view, exists := app.ds.GetView(viewID)
	if !exists {
		return fmt.Errorf("view '%s' –Ω–µ –Ω–∞–π–¥–µ–Ω", viewID)
	}

	config := view.Config()
	stats := view.Stats()

	// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω force
	if !force {
		fmt.Printf("‚ö†Ô∏è  View '%s' –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.\n", viewID)
		fmt.Printf("   –ù–∞–∑–≤–∞–Ω–∏–µ: %s\n", config.Name)
		if config.Description != "" {
			fmt.Printf("   –û–ø–∏—Å–∞–Ω–∏–µ: %s\n", config.Description)
		}
		fmt.Printf("   –ò—Å—Ç–æ—á–Ω–∏–∫: %s\n", config.SourcePrefix)
		fmt.Printf("   –°–æ–∑–¥–∞–Ω: %s\n", config.CreatedAt.Format("2006-01-02 15:04:05"))
		if stats.RefreshCount > 0 {
			fmt.Printf("   –û–±–Ω–æ–≤–ª–µ–Ω–∏–π: %d\n", stats.RefreshCount)
			fmt.Printf("   –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: %d\n", stats.ResultCount)
		}
		fmt.Println()

		fmt.Print("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç view? (y/N): ")
		var response string
		fmt.Scanln(&response)
		if strings.ToLower(response) != "y" && strings.ToLower(response) != "–¥–∞" {
			fmt.Println("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
			return nil
		}
	}

	ctxTimeout, cancel := context.WithTimeout(context.Background(), 30*time.Second)
	defer cancel()

	// –£–¥–∞–ª—è–µ–º view
	err = app.ds.RemoveView(ctxTimeout, viewID)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ view: %w", err)
	}

	fmt.Printf("üóëÔ∏è  View '%s' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω\n", viewID)

	// –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Ç–æ–º, —á—Ç–æ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ
	fmt.Println("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞")
	if config.EnableCaching {
		fmt.Println("   ‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω")
	}
	fmt.Println("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞")

	return nil
}

func init() {
	commands = append(commands, &cli.Command{
		Name:    "delete-view",
		Aliases: []string{"dv", "remove-view", "rm-view"},
		Usage:   "–£–¥–∞–ª–∏—Ç—å view",
		Flags: []cli.Flag{
			&cli.BoolFlag{
				Name:    "force",
				Aliases: []string{"f"},
				Usage:   "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
			},
		},
		Action:    deleteView,
		ArgsUsage: "<view-id>",
		Description: `–£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π view —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ view —É–¥–∞–ª—è—é—Ç—Å—è:
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è view (—Ñ–∏–ª—å—Ç—Ä—ã, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–µ—Å–ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã–ª–æ –≤–∫–ª—é—á–µ–Ω–æ)
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
- –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ view –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º.

–ü—Ä–∏–º–µ—Ä—ã:
  # –£–¥–∞–ª–∏—Ç—å —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
  ues-ds delete-view user-profiles
  
  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
  ues-ds delete-view old-view --force
  
  # –£–¥–∞–ª–µ–Ω–∏–µ —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º –∫–æ–º–∞–Ω–¥—ã
  ues-ds rm-view temporary-view -f

‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –£–¥–∞–ª–µ–Ω–∏–µ view –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!`,
	})
}
